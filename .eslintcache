[{"/Users/vdowsett/dowsettPlantFolio/dowsett-plant-folio/src/index.js":"1","/Users/vdowsett/dowsettPlantFolio/dowsett-plant-folio/src/reportWebVitals.js":"2","/Users/vdowsett/dowsettPlantFolio/dowsett-plant-folio/src/App.js":"3","/Users/vdowsett/dowsettPlantFolio/dowsett-plant-folio/src/components/Plant.js":"4","/Users/vdowsett/dowsettPlantFolio/dowsett-plant-folio/src/components/Landing.js":"5","/Users/vdowsett/dowsettPlantFolio/dowsett-plant-folio/src/components/Library.js":"6","/Users/vdowsett/dowsettPlantFolio/dowsett-plant-folio/src/data/plants.js":"7","/Users/vdowsett/dowsettPlantFolio/dowsett-plant-folio/src/components/plantCover.js":"8","/Users/vdowsett/dowsettPlantFolio/dowsett-plant-folio/src/components/plantGrowth.js":"9","/Users/vdowsett/dowsettPlantFolio/dowsett-plant-folio/src/components/plantCareUse.js":"10","/Users/vdowsett/dowsettPlantFolio/dowsett-plant-folio/src/components/growthCycle.js":"11","/Users/vdowsett/dowsettPlantFolio/dowsett-plant-folio/src/components/benefits.js":"12","/Users/vdowsett/dowsettPlantFolio/dowsett-plant-folio/src/data/benefits.js":"13"},{"size":544,"mtime":1607638252538,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1607460676166,"results":"16","hashOfConfig":"15"},{"size":733,"mtime":1608228147493,"results":"17","hashOfConfig":"15"},{"size":1224,"mtime":1608223374068,"results":"18","hashOfConfig":"15"},{"size":913,"mtime":1607641823460,"results":"19","hashOfConfig":"15"},{"size":1173,"mtime":1608227133444,"results":"20","hashOfConfig":"15"},{"size":4590,"mtime":1608326115126,"results":"21","hashOfConfig":"15"},{"size":1781,"mtime":1608224174672,"results":"22","hashOfConfig":"15"},{"size":4445,"mtime":1608224015527,"results":"23","hashOfConfig":"15"},{"size":3680,"mtime":1608338609695,"results":"24","hashOfConfig":"15"},{"size":2588,"mtime":1607831092940,"results":"25","hashOfConfig":"15"},{"size":2258,"mtime":1607998534983,"results":"26","hashOfConfig":"15"},{"size":1215,"mtime":1608227806977,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1n2vc1z",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},"/Users/vdowsett/dowsettPlantFolio/dowsett-plant-folio/src/index.js",[],["63","64"],"/Users/vdowsett/dowsettPlantFolio/dowsett-plant-folio/src/reportWebVitals.js",[],"/Users/vdowsett/dowsettPlantFolio/dowsett-plant-folio/src/App.js",["65","66","67"],"import React, { Component } from 'react';\nimport { Router, Route, Link } from 'react-router-dom';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Landing from './components/Landing';\nimport Library from './components/Library';\nimport Plant from './components/Plant';\n\n// CSS\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <header>\n          <h1>Plant Folio</h1>\n        </header>\n        <nav>\n          <Link to='/'>Home</Link>\n        </nav>\n        <main>\n        <Route exact path=\"/\" component={Library} />\n        <Route path=\"/library\" component={Library} />\n        <Route path=\"/plant/:slug\" component={Plant} />\n        </main>\n    </div>\n      \n      \n  );\n}\n\nexport default App;\n","/Users/vdowsett/dowsettPlantFolio/dowsett-plant-folio/src/components/Plant.js",[],"/Users/vdowsett/dowsettPlantFolio/dowsett-plant-folio/src/components/Landing.js",[],"/Users/vdowsett/dowsettPlantFolio/dowsett-plant-folio/src/components/Library.js",["68"],"import { Typography } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport plantData from './../data/plants.js';\n\n\nclass Library extends Component { \n    constructor(props) {\n        super(props);\n        this.state = { plants: plantData };\n      }\n\n    render() {\n     return ( \n       <section>\n         {\n          this.state.plants.map( (plant, index) => \n            <div key={index} className='library'>\n                <Link to={`/plant/${plant.slug}`} key={index}><div className='libraryImgWrapper'><img src={plant.images.plantCover} className='libraryImg'/></div></Link>\n              \n               <Typography variant=\"overline\" color=\"textSecondary\" style={{ fontSize: '1.5rem'}}><Link to={`/plant/${plant.slug}`} key={index}>{plant.name}</Link></Typography>\n               <br/>\n               <Typography variant=\"caption\" color=\"textSecondary\" style={{ fontSize: '1rem'}}>{plant.plantInformation.genus} {plant.plantInformation.species} <i>'{plant.plantInformation.cultivar}'</i></Typography>\n            </div>\n          )\n        }\n       </section>\n      );\n    }\n  }\n\nexport default Library;","/Users/vdowsett/dowsettPlantFolio/dowsett-plant-folio/src/data/plants.js",["69"],"export default [{\n    name: 'Bee Balm',\n    images: {\n        plantCover: '/assets/images/plantCovers/placeholderCover.jpg',\n        plantProfile: '/assets/images/plantProfile/placeholderProfile.jpg', \n        plantRecipe:'/assets/images/plantProfile/placeholderRecipe.jpg',\n        plantCare:'/assets/images/plantProfile/placeholderCare.jpg',\n        seed: '/assets/images/seed/placeholder.jpg',\n        seedling: '/assets/images/seedling/placeholder.jpg',\n        growingPlant: '/assets/images/growingPlant/placeholder.jpg',\n        maturePlant: '/assets/images/maturePlant/placeholder.jpg',\n        flower: '/assets/images/flower/placeholder.jpg',\n        harvest: '/assets/images/harvest/placeholder.jpg',\n    },\n    slug: 'monarda-didyma-panorama-red',\n    plantInformation: {\n        family: 'Lamiaceae',\n        genus: 'Monarda',\n        species: 'didyma',\n        cultivar: 'Panorama Red',\n        commonNames: 'Oswego Tea, Firecracker Plant, Bergamot, Scarlet beebalm, Red bergamot, Beebalm, Horsemint',\n        IDtip: 'Asymmetrical, two-lipped tubular flowers in pom-pom shape, square stems, oval hairy leaves',\n        lookalikes: 'Unknown',\n    },\n    growthRequirements: {\n        sunShade: 'Full Sun, Partial Sun',\n        zones: '3-9',\n        soilType: 'Chalk, Clay, Loam, Sand',\n        water: 'Moist but Well-Drained',\n        ph: 'Acid, Alkaline, Neutral',\n    },\n    growthHabbit: {\n        habit: 'Herb, Spreading',\n        lifeCycle: 'Perennial',\n        height: '3',\n        width: '3',\n        flowerColor: 'Red',\n        flowerTime: 'Spring to Summer',\n        leaveColor: 'Green',\n        leaveShape: 'Ovate-Lanceolate',\n        leaveAttributes: 'Deciduous, Fragrant, Shiny, Opposite leave',\n    },\n    plantPropagation: {\n        seed: 'Self Fertile',\n        seedTime: 'Direct Sow in Fall, Winter Sow Indoors Before Frost',\n        seedCollection: 'Allow seedheads to dry on plants; remove and collect seeds',\n        germinationTemp: '60ºF - 70ºF',\n        germinationTime: '2-4 weeks',\n        cuttings: 'Root, Stem',\n        division: 'Fall division',\n        runners: 'Will spread and naturalize via rhizomes',\n        plantTime: 'After Frost',\n    },\n    plantCare: {\n        pests: 'Unknown',\n        diseases: 'Powdery mildew, this variety claims resistance',\n        plantCareTips: 'Keep moist and good air circulation to avoid powdery mildew',\n        origin: 'North America',\n        companions: 'phlox, rudbeckia, roses, peonies',\n        competitors: 'Unknown',\n    },\n    plantUse: {\n        culinaryUses: 'Part of the mint family, this edible foliage raw or cooked, used in salads, jellies, sorbets, syrups or cooked foods. It adds spiciness. Pairs well with tomato dishes, or as stuffing in meat or poultry dishes. Combines well with tropical fruits such as mango. Flowers make edible garnish. Dried flowers can be brewed as tea',\n        medicinalUses: 'Antimicrobial and antiseptic, often used to treat colds and flu. The soothing effect on the digestive tract helps to treat indigestion, bloating and nausea. Can assist with headaches, insomnia and menstrual pain. Can be used as a mouthwash for sore throats, toothaches and mouth sores.',\n        resources: '<ul><li><a href=\"https://www.gardenia.net/plant-variety/monarda-bee-balm\">Gardenia</a></li><li><a href=\"https://garden.org/plants/view/77839/Bee-Balm-Monarda-didyma/\">Garden.org</a></li> <li><a href=\"http://theepicentre.com/spice/bee-balm-bergamot_monarda/\">The epi Centre</a></li><li><a href=\"https://www.swallowtailgardenseeds.com/perennials/bee-balm/panorama-red-bee-balm-seeds.html\">Seed from Swallowtail</a></li></ul>',\n        lore: 'Oswego tea because Native American people in the Oswego, NY region used it for teas. Another story suggests that colonists made bee balm tea in the Boston Tea Party era when they were boycotting British black tea. In the language of flowers, Monarda symbolizes compassion and sympathy.',\n        recipeIdeas: '<ol><li>Pick some bee balm and remove the leaves from the stems and red petals from the flower heads.</li><li>Fill a mason jar with cold water and add the bee balm. Seal the jar and place it in the refrigerator for up to 24 hours.</li><li>Strain the tea and serve over ice with honey and a slice of lemon. Bee balm tea will keep in the refrigerator for up to a week.',\n    },\n    gardenBenefits: [\n        { name: 'insectory'},\n        { name: 'birds'},\n        { name: 'fumegant'},\n        { name: 'rabbitResistant' },\n        { name: 'deerResistant'},\n        { name: 'edibleFlower'},\n        { name: 'edibleLeaf'},\n    ],\n  },\n];","/Users/vdowsett/dowsettPlantFolio/dowsett-plant-folio/src/components/plantCover.js",["70"],"import React, { Component } from 'react';\nimport plantData from '../data/plants.js';\n\n// CSS\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Card from 'react-bootstrap/Card'\n\nclass PlantCover extends Component {\n  constructor(props) { \n    super(props);\n\n    const plant = plantData.find( plant => {\n      return this.props.slug === plant.slug\n    });\n\n    this.state = {\n      plant: plant\n    };\n  }\n\n  render() {\n    return (\n    <Card style={{ height: '35rem', border:'none'}}>\n      <Card.Img\n            src={this.state.plant.images.plantCover} \n            title={this.state.plant.name}\n            alt={this.state.plant.name}\n            style={{ height: '35rem', objectFit: 'cover' }}/>\n          <Card.ImgOverlay style={{ width: '30rem', margin: '60px', paddingTop:'100px', backgroundColor: '#fff'}}>\n            <Typography variant=\"h2\" component=\"h2\" gutterBottom align='right'>\n                {this.state.plant.name}\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\" gutterBottom align='right'>\n                {this.state.plant.plantInformation.family} {this.state.plant.plantInformation.genus} {this.state.plant.plantInformation.species} \"{this.state.plant.plantInformation.cultivar}\"\n            </Typography>\n            <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\" gutterBottom align='right'>\n                Common Names:\n            </Typography>\n            <Typography variant=\"caption\" color=\"textSecondary\" component=\"p\" gutterBottom align='right'>\n                {this.state.plant.plantInformation.commonNames}\n            </Typography>\n          </Card.ImgOverlay>\n        </Card>\n      );\n  }\n}\n\nexport default PlantCover;\n","/Users/vdowsett/dowsettPlantFolio/dowsett-plant-folio/src/components/plantGrowth.js",["71"],"import React, { Component } from 'react';\nimport plantData from '../data/plants.js';\n\n// CSS\nimport '../css/img.css';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport Image from 'react-bootstrap/Image'\n\nclass PlantGrowth extends Component {\n  constructor(props) { \n    super(props);\n\n    const plant = plantData.find( plant => {\n      return this.props.slug === plant.slug\n    });\n\n    this.state = {\n      plant: plant\n    };\n  }\n\n  render() {\n    return (\n      <Grid container spacing={3}>\n      <Grid item xs={8}>\n          <Image src={this.state.plant.images.plantProfile} className=\"profileImg\"/>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography variant=\"h2\" color=\"textSecondary\" align=\"left\" gutterBottom>\n            Growing Requirements:\n            <List>\n              <ListItem><ListItemText>Sun or Shade: <b>{this.state.plant.growthRequirements.sunShade}</b></ListItemText></ListItem>\n              <ListItem><ListItemText>Zones: <b>{this.state.plant.growthRequirements.zones}</b></ListItemText></ListItem>\n              <ListItem><ListItemText>Soil Type: <b>{this.state.plant.growthRequirements.soilType}</b></ListItemText></ListItem>\n              <ListItem><ListItemText>Water: <b>{this.state.plant.growthRequirements.water}</b></ListItemText></ListItem>\n              <ListItem><ListItemText>Acidity: <b>{this.state.plant.growthRequirements.ph}</b></ListItemText></ListItem>\n            </List>\n          </Typography>\n\n          <Typography variant=\"h2\" color=\"textSecondary\" align=\"left\" gutterBottom>\n            Growth Habbit:\n            <List>\n              <ListItem><ListItemText>Habit: <b>{this.state.plant.growthHabbit.habit}</b></ListItemText></ListItem>\n              <ListItem><ListItemText>Life Cycle: <b>{this.state.plant.growthHabbit.lifeCycle}</b></ListItemText></ListItem>\n              <ListItem><ListItemText>Height: <b>{this.state.plant.growthHabbit.height}</b></ListItemText></ListItem>\n              <ListItem><ListItemText>Width: <b>{this.state.plant.growthHabbit.width}</b></ListItemText></ListItem>\n              <ListItem><ListItemText>Flower Color: <b>{this.state.plant.growthHabbit.flowerColor}</b></ListItemText></ListItem>\n              <ListItem><ListItemText>Flower Time: <b>{this.state.plant.growthHabbit.flowerTime}</b></ListItemText></ListItem>\n              <ListItem><ListItemText>Leave Color: <b>{this.state.plant.growthHabbit.leaveColor}</b></ListItemText></ListItem>\n              <ListItem><ListItemText>Leave Shape: <b>{this.state.plant.growthHabbit.leaveShape}</b></ListItemText></ListItem>\n              <ListItem><ListItemText>Leave Attributes: <b>{this.state.plant.growthHabbit.leaveAttributes}</b></ListItemText></ListItem>\n            </List>\n          </Typography>\n\n          <Typography variant=\"h2\" color=\"textSecondary\" align=\"left\" gutterBottom>\n            Plant Propagation:\n            <List>\n              <ListItem><ListItemText>Seed & Pollination: <b>{this.state.plant.plantPropagation.seed}</b></ListItemText></ListItem>\n              <ListItem><ListItemText>Seed Time: <b>{this.state.plant.plantPropagation.seedTime}</b></ListItemText></ListItem>\n              <ListItem><ListItemText>Seed Collection: <b>{this.state.plant.plantPropagation.seedCollection}</b></ListItemText></ListItem>\n              <ListItem><ListItemText>Germination Temperature: <b>{this.state.plant.plantPropagation.germinationTemp}</b></ListItemText></ListItem>\n              <ListItem><ListItemText>Germination Time: <b>{this.state.plant.plantPropagation.germinationTime}</b></ListItemText></ListItem>\n              <ListItem><ListItemText>Cuttings: <b>{this.state.plant.plantPropagation.cuttings}</b></ListItemText></ListItem>\n              <ListItem><ListItemText>Division: <b>{this.state.plant.plantPropagation.division}</b></ListItemText></ListItem>\n              <ListItem><ListItemText>Runners: <b>{this.state.plant.plantPropagation.runners}</b></ListItemText></ListItem>\n              <ListItem><ListItemText>Planting Time: <b>{this.state.plant.plantPropagation.plantTime}</b></ListItemText></ListItem>\n            </List>\n          </Typography>\n      </Grid>\n    </Grid>\n      );\n  }\n}\nexport default PlantGrowth;\n","/Users/vdowsett/dowsettPlantFolio/dowsett-plant-folio/src/components/plantCareUse.js",[],"/Users/vdowsett/dowsettPlantFolio/dowsett-plant-folio/src/components/growthCycle.js",[],"/Users/vdowsett/dowsettPlantFolio/dowsett-plant-folio/src/components/benefits.js",["72","73"],"import React, { Component } from 'react';\nimport plantData from '../data/plants.js';\nimport benefitData from '../data/benefits.js';\n\n// CSS\nimport '../css/img.css';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\n// icons\n// import { GiRabbit, GiDeerTrack, GiAcorn, GiAerosol, GiAgave, GiAlgae, GiAmberMosquito, GiAngularSpider, GiAnt, GiAnts, GiApothecary, GiAppleCore, GiBarn, GiBat, GiBee, GiBeech, GiBeet, GiBerriesBowl, GiBirdHouse, GiBroccoli, GiBubblingFlask, GiButterfly, GiCarrot, GiCauldron, GiCaterpillar, GiCherry , GiClothJar, GiCoffeeCup, GiDragonfly, GiEgyptianBird, GiFallingLeaf, GiFern, GiFruitTree, GiGarlic,GiHerbsBundle,GiHummingbird, GiLadybug, GiMartini,GiMushroomGills, GiNewShoot, GiPineTree,GiPollenDust, GiRemedy, GiSnail,GiSquirrel,GiStagHead, GiTeapot, GiTurd, GiVineLeaf, GiPerfumeBottle,GiPoisonGas} from 'react-icons/gi';\n\nclass Benefits extends Component {\n  constructor(props) { \n    super(props);\n\n    const plant = plantData.find( plant => {\n      return this.props.slug === plant.slug\n    });\n\n    this.state = {\n        plant: plant,\n        benefits: benefitData,\n    };\n  }\n\n  render() {\n\n    return (\n\n      <Grid container style={{ backgroundColor: '#ececec' }}>\n        <Grid item xs={12} style={{ height: '2.5rem'}}></Grid>\n\n        <Grid item xs={12}>\n            <Typography variant=\"h4\" color=\"textSecondary\" gutterBottom>{this.state.plant.name} Garden Benefits </Typography>\n        </Grid>\n\n\n            { this.state.benefits.map( ( benefit, index ) => \n                this.state.plant.gardenBenefits.map(gardenBenefit =>\n            { if (benefit.name === gardenBenefit.name) {\n                console.log(gardenBenefit);\n                console.log(benefit);\n                return <Grid item xs><Typography variant=\"overline\" color=\"textSecondary\" gutterBottom><div key={index}><div><img src={benefit.icon} style={{ maxWidth: '75px', maxHeight: '55px', marginTop:'15px',}}/></div><div>{benefit.displayName}</div></div></Typography></Grid>\n            } else {\n                return\n            }\n            })\n            )}\n            \n\n        <Grid item xs={12} style={{ height: '5rem'}}></Grid>\n    </Grid>\n    );\n\n  }\n\n}\nexport default Benefits;\n","/Users/vdowsett/dowsettPlantFolio/dowsett-plant-folio/src/data/benefits.js",["74"],"export default [\n    { name: 'insectory', icon: '/assets/images/benefitIcons/ladybug.svg', displayName: 'Insectory', },\n    { name: 'birds', icon: '/assets/images/benefitIcons/hummingbird.svg', displayName: 'Birds',  },\n    { name: 'fumegant', icon: '/assets/images/benefitIcons/delicate-perfume.svg', displayName: 'Fumegant',  },\n    { name: 'rabbitResistant', icon: '/assets/images/benefitIcons/rabbit.svg', displayName: 'Rabbit Resistant',  },\n    { name: 'deerResistant', icon: '/assets/images/benefitIcons/stag-head.svg', displayName: 'Deer Resistant',  },\n    { name: 'groundCover', icon: '/assets/images/benefitIcons/vine-leaf.svg', displayName: 'Ground Cover',  },\n    { name: 'edibleFlower', icon: '/assets/images/benefitIcons/flower.svg', displayName: 'Edible Flower',  },\n    { name: 'edibleFruit', icon: '/assets/images/benefitIcons/cherry.svg', displayName: 'Edible Fruit',  },\n    { name: 'edibleLeaf', icon: '/assets/images/benefitIcons/falling-leaf.svg', displayName: 'Edible Leaf',  },\n    { name: 'edibleRoot', icon: '/assets/images/benefitIcons/beet.svg', displayName: 'Edible Root',  },\n    { name: 'edibleBlulb', icon: '/assets/images/benefitIcons/garlic.svg', displayName: 'Edible Blulb',  }\n]",["75","76"],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"85","line":2,"column":10,"nodeType":"83","messageId":"84","endLine":2,"endColumn":16},{"ruleId":"81","severity":1,"message":"86","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":15},{"ruleId":"87","severity":1,"message":"88","line":19,"column":98,"nodeType":"89","endLine":19,"endColumn":157},{"ruleId":"90","severity":1,"message":"91","line":1,"column":1,"nodeType":"92","endLine":79,"endColumn":3},{"ruleId":"81","severity":1,"message":"93","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":12},{"ruleId":"81","severity":1,"message":"94","line":11,"column":8,"nodeType":"83","messageId":"84","endLine":11,"endColumn":15},{"ruleId":"87","severity":1,"message":"88","line":44,"column":126,"nodeType":"89","endLine":44,"endColumn":217},{"ruleId":"95","severity":1,"message":"96","line":46,"column":17,"nodeType":"97","messageId":"98","endLine":46,"endColumn":23},{"ruleId":"90","severity":1,"message":"91","line":1,"column":1,"nodeType":"92","endLine":13,"endColumn":2},{"ruleId":"77","replacedBy":"99"},{"ruleId":"79","replacedBy":"100"},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Landing' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'Grid' is defined but never used.","'Divider' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue",["101"],["102"],"no-global-assign","no-unsafe-negation"]